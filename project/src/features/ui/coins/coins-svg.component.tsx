import {
  Bodies,
  Engine,
  Render,
  Runner,
  World,
  Svg,
  Common,
  Mouse,
  MouseConstraint,
  Composite,
} from 'matter-js';
import 'pathseg';
import { FunctionComponent } from 'react';

export interface CoinsProps {}

let engine: Engine;
let world: World;
let render: Render;

const select = (root: Document, selector: string) => {
  return Array.prototype.slice.call(root.querySelectorAll(selector));
};

if (typeof document !== 'undefined') {
  // const svgString =
  //   '<svg width="306" height="248" viewBox="0 0 306 248" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M294.498 147.119L295 141.596V1H305V147.553L304.463 153.311L303.389 161.162L301.777 168.489L299.629 175.817L296.943 182.621L293.184 190.472L288.35 198.847L282.979 206.174L278.682 211.409L277.071 212.979L266.329 222.923L256.124 230.251L245.919 236.008L240.011 238.626L230.343 242.289L226.046 243.336L216.378 245.43L213.155 245.953L208.322 246.477L200.265 247H107.346L97.6784 246.477L89.6219 245.43L79.9541 243.336L71.3604 240.719L63.3039 237.579L54.1731 232.868L46.6537 228.157L39.6714 222.923L36.9859 220.83L28.9293 212.979L24.6325 208.268L20.3357 202.511L15.5018 195.183L11.2049 187.332L7.98233 180.004L5.29682 172.153L3.68551 166.396L2.0742 158.021L1 147.553V1H11V141.596L12.0035 151.638L13.5088 159.672L15.0141 165.196L17.523 172.728L20.5336 179.757L24.5477 187.289L29.0636 194.319L33.0777 199.843L37.0919 204.362L44.6184 211.894L47.1272 213.902L53.6502 218.923L60.6749 223.443L69.2049 227.962L76.7315 230.974L84.7597 233.485L93.7915 235.494L101.318 236.498L110.35 237H197.155L204.682 236.498L209.198 235.996L212.208 235.494L221.24 233.485L225.254 232.481L234.286 228.966L239.806 226.455L249.339 220.932L258.873 213.902L268.908 204.362L270.413 202.855L274.428 197.834L279.445 190.804L283.961 182.77L287.474 175.238L289.982 168.711L291.989 161.681L293.495 154.651L294.498 147.119Z" stroke="black"/></svg>';
  const svgString =
    '<svg width="1360" height="303" viewBox="0 0 1360 303" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M347.498 147.119L348 141.596V1H380V141.596L381.004 151.638L382.509 159.672L384.014 165.196L386.523 172.728L389.534 179.757L393.548 187.289L398.064 194.319L402.078 199.843L406.092 204.362L413.618 211.894L416.127 213.902L422.65 218.923L429.675 223.443L438.205 227.962L445.731 230.974L453.76 233.485L462.792 235.494L470.318 236.498L479.35 237H566.156L573.682 236.498L578.198 235.996L581.208 235.494L590.24 233.485L594.254 232.481L603.286 228.966L608.806 226.455L618.339 220.932L627.873 213.902L637.908 204.362L639.413 202.855L643.428 197.834L648.445 190.804L652.961 182.77L656.474 175.238L658.982 168.711L660.989 161.681L662.495 154.651L663.498 147.119L664 141.596V1H696V141.596L697.004 151.638L698.509 159.672L700.014 165.196L702.523 172.728L705.534 179.757L709.548 187.289L714.064 194.319L718.078 199.843L722.092 204.362L729.618 211.894L732.127 213.902L738.65 218.923L745.675 223.443L754.205 227.962L761.731 230.974L769.76 233.485L778.792 235.494L786.318 236.498L795.35 237H882.156L889.682 236.498L894.198 235.996L897.208 235.494L906.24 233.485L910.254 232.481L919.286 228.966L924.806 226.455L934.339 220.932L943.873 213.902L953.908 204.362L955.413 202.855L959.428 197.834L964.445 190.804L968.961 182.77L972.474 175.238L974.982 168.711L976.989 161.681L978.495 154.651L979.498 147.119L980 141.596V1H1012V141.596L1013 151.638L1014.51 159.672L1016.01 165.196L1018.52 172.728L1021.53 179.757L1025.55 187.289L1030.06 194.319L1034.08 199.843L1038.09 204.362L1045.62 211.894L1048.13 213.902L1054.65 218.923L1061.67 223.443L1070.2 227.962L1077.73 230.974L1085.76 233.485L1094.79 235.494L1102.32 236.498L1111.35 237H1198.16L1205.68 236.498L1210.2 235.996L1213.21 235.494L1222.24 233.485L1226.25 232.481L1235.29 228.966L1240.81 226.455L1250.34 220.932L1259.87 213.902L1269.91 204.362L1271.41 202.855L1275.43 197.834L1280.45 190.804L1284.96 182.77L1288.47 175.238L1290.98 168.711L1292.99 161.681L1294.49 154.651L1295.5 147.119L1296 141.596V1H1359V302H1V1H64V141.596L65.0035 151.638L66.5088 159.672L68.0141 165.196L70.523 172.728L73.5336 179.757L77.5477 187.289L82.0636 194.319L86.0777 199.843L90.0919 204.362L97.6184 211.894L100.127 213.902L106.65 218.923L113.675 223.443L122.205 227.962L129.731 230.974L137.76 233.485L146.792 235.494L154.318 236.498L163.35 237H250.155L257.682 236.498L262.198 235.996L265.208 235.494L274.24 233.485L278.254 232.481L287.286 228.966L292.806 226.455L302.339 220.932L311.873 213.902L321.908 204.362L323.413 202.855L327.428 197.834L332.445 190.804L336.961 182.77L340.474 175.238L342.982 168.711L344.989 161.681L346.495 154.651L347.498 147.119Z" fill="black" stroke="black"/></svg>';
  var parser = new DOMParser();
  var svgDocument = parser.parseFromString(svgString, 'image/svg+xml');

  Common.setDecomp(require('poly-decomp'));

  engine = Engine.create();
  world = engine.world;

  render = Render.create({
    element: document.body,
    engine: engine,
    options: {
      width: 1360,
      height: 604,
    },
  });

  const vertexSets = select(svgDocument, 'path').map((path) => {
    return Svg.pathToVertices(path, 30);
  });

  console.log(JSON.stringify(vertexSets));
  console.log(
    JSON.stringify(
      vertexSets[0].map((vertice) => ({
        x: ~~vertice.x,
        y: ~~vertice.y,
      })),
    ),
  );

  // TODO: Temporary fix?
  const xOffset = -1;
  const yOffset = 54;

  const container = Bodies.fromVertices(
    render.options.width! / 2 + xOffset,
    render.options.height! / 2 + yOffset + 150,
    vertexSets,
    {
      isStatic: true,
    },
    true,
  );

  const circle = Bodies.circle(
    render.options.width! / 2,
    render.options.height! / 2 - 100,
    20,
    {
      friction: 0,
    },
  );

  const mouse = Mouse.create(document.body);
  const mouseConstraint = MouseConstraint.create(engine, {
    mouse,
  });
  Composite.add(engine.world, mouseConstraint);

  World.add(engine.world, [container, circle]);

  Render.run(render);
  Runner.run(engine);
}

export const Coins: FunctionComponent<CoinsProps> = ({}) => {
  return <div></div>;
};
